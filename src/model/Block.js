/*
 * BlockScout API
 * API for BlockScout web app
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {AddressParam} from './AddressParam';
import {Reward} from './Reward';

/**
 * The Block model module.
 * @module model/Block
 * @version 1.0.0
 */
export class Block {
  /**
   * Constructs a new <code>Block</code>.
   * @alias module:model/Block
   * @class
   * @param baseFeePerGas {String} 
   * @param burntFees {String} 
   * @param burntFeesPercentage {Number} 
   * @param difficulty {String} 
   * @param extraData {String} 
   * @param gasLimit {String} 
   * @param gasTargetPercentage {Number} 
   * @param gasUsed {String} 
   * @param gasUsedPercentage {Number} 
   * @param hash {String} 
   * @param height {Number} 
   * @param miner {module:model/AddressParam} 
   * @param nonce {String} 
   * @param parentHash {String} 
   * @param priorityFee {String} 
   * @param rewards {Array.<module:model/Reward>} 
   * @param size {Number} 
   * @param stateRoot {String} 
   * @param timestamp {String} 
   * @param totalDifficulty {String} 
   * @param txCount {Number} 
   * @param txFees {String} 
   * @param type {String} 
   * @param unclesHashes {Array.<String>} 
   * @param withdrawalsCount {Number} 
   */
  constructor(baseFeePerGas, burntFees, burntFeesPercentage, difficulty, extraData, gasLimit, gasTargetPercentage, gasUsed, gasUsedPercentage, hash, height, miner, nonce, parentHash, priorityFee, rewards, size, stateRoot, timestamp, totalDifficulty, txCount, txFees, type, unclesHashes, withdrawalsCount) {
    this.baseFeePerGas = baseFeePerGas;
    this.burntFees = burntFees;
    this.burntFeesPercentage = burntFeesPercentage;
    this.difficulty = difficulty;
    this.extraData = extraData;
    this.gasLimit = gasLimit;
    this.gasTargetPercentage = gasTargetPercentage;
    this.gasUsed = gasUsed;
    this.gasUsedPercentage = gasUsedPercentage;
    this.hash = hash;
    this.height = height;
    this.miner = miner;
    this.nonce = nonce;
    this.parentHash = parentHash;
    this.priorityFee = priorityFee;
    this.rewards = rewards;
    this.size = size;
    this.stateRoot = stateRoot;
    this.timestamp = timestamp;
    this.totalDifficulty = totalDifficulty;
    this.txCount = txCount;
    this.txFees = txFees;
    this.type = type;
    this.unclesHashes = unclesHashes;
    this.withdrawalsCount = withdrawalsCount;
  }

  /**
   * Constructs a <code>Block</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Block} obj Optional instance to populate.
   * @return {module:model/Block} The populated <code>Block</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Block();
      if (data.hasOwnProperty('base_fee_per_gas'))
        obj.baseFeePerGas = ApiClient.convertToType(data['base_fee_per_gas'], 'String');
      if (data.hasOwnProperty('burnt_fees'))
        obj.burntFees = ApiClient.convertToType(data['burnt_fees'], 'String');
      if (data.hasOwnProperty('burnt_fees_percentage'))
        obj.burntFeesPercentage = ApiClient.convertToType(data['burnt_fees_percentage'], 'Number');
      if (data.hasOwnProperty('difficulty'))
        obj.difficulty = ApiClient.convertToType(data['difficulty'], 'String');
      if (data.hasOwnProperty('extra_data'))
        obj.extraData = ApiClient.convertToType(data['extra_data'], 'String');
      if (data.hasOwnProperty('gas_limit'))
        obj.gasLimit = ApiClient.convertToType(data['gas_limit'], 'String');
      if (data.hasOwnProperty('gas_target_percentage'))
        obj.gasTargetPercentage = ApiClient.convertToType(data['gas_target_percentage'], 'Number');
      if (data.hasOwnProperty('gas_used'))
        obj.gasUsed = ApiClient.convertToType(data['gas_used'], 'String');
      if (data.hasOwnProperty('gas_used_percentage'))
        obj.gasUsedPercentage = ApiClient.convertToType(data['gas_used_percentage'], 'Number');
      if (data.hasOwnProperty('hash'))
        obj.hash = ApiClient.convertToType(data['hash'], 'String');
      if (data.hasOwnProperty('height'))
        obj.height = ApiClient.convertToType(data['height'], 'Number');
      if (data.hasOwnProperty('miner'))
        obj.miner = AddressParam.constructFromObject(data['miner']);
      if (data.hasOwnProperty('nonce'))
        obj.nonce = ApiClient.convertToType(data['nonce'], 'String');
      if (data.hasOwnProperty('parent_hash'))
        obj.parentHash = ApiClient.convertToType(data['parent_hash'], 'String');
      if (data.hasOwnProperty('priority_fee'))
        obj.priorityFee = ApiClient.convertToType(data['priority_fee'], 'String');
      if (data.hasOwnProperty('rewards'))
        obj.rewards = ApiClient.convertToType(data['rewards'], [Reward]);
      if (data.hasOwnProperty('size'))
        obj.size = ApiClient.convertToType(data['size'], 'Number');
      if (data.hasOwnProperty('state_root'))
        obj.stateRoot = ApiClient.convertToType(data['state_root'], 'String');
      if (data.hasOwnProperty('timestamp'))
        obj.timestamp = ApiClient.convertToType(data['timestamp'], 'String');
      if (data.hasOwnProperty('total_difficulty'))
        obj.totalDifficulty = ApiClient.convertToType(data['total_difficulty'], 'String');
      if (data.hasOwnProperty('tx_count'))
        obj.txCount = ApiClient.convertToType(data['tx_count'], 'Number');
      if (data.hasOwnProperty('tx_fees'))
        obj.txFees = ApiClient.convertToType(data['tx_fees'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('uncles_hashes'))
        obj.unclesHashes = ApiClient.convertToType(data['uncles_hashes'], ['String']);
      if (data.hasOwnProperty('withdrawals_count'))
        obj.withdrawalsCount = ApiClient.convertToType(data['withdrawals_count'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {String} baseFeePerGas
 */
Block.prototype.baseFeePerGas = undefined;

/**
 * @member {String} burntFees
 */
Block.prototype.burntFees = undefined;

/**
 * @member {Number} burntFeesPercentage
 */
Block.prototype.burntFeesPercentage = undefined;

/**
 * @member {String} difficulty
 */
Block.prototype.difficulty = undefined;

/**
 * @member {String} extraData
 */
Block.prototype.extraData = undefined;

/**
 * @member {String} gasLimit
 */
Block.prototype.gasLimit = undefined;

/**
 * @member {Number} gasTargetPercentage
 */
Block.prototype.gasTargetPercentage = undefined;

/**
 * @member {String} gasUsed
 */
Block.prototype.gasUsed = undefined;

/**
 * @member {Number} gasUsedPercentage
 */
Block.prototype.gasUsedPercentage = undefined;

/**
 * @member {String} hash
 */
Block.prototype.hash = undefined;

/**
 * @member {Number} height
 */
Block.prototype.height = undefined;

/**
 * @member {module:model/AddressParam} miner
 */
Block.prototype.miner = undefined;

/**
 * @member {String} nonce
 */
Block.prototype.nonce = undefined;

/**
 * @member {String} parentHash
 */
Block.prototype.parentHash = undefined;

/**
 * @member {String} priorityFee
 */
Block.prototype.priorityFee = undefined;

/**
 * @member {Array.<module:model/Reward>} rewards
 */
Block.prototype.rewards = undefined;

/**
 * @member {Number} size
 */
Block.prototype.size = undefined;

/**
 * @member {String} stateRoot
 */
Block.prototype.stateRoot = undefined;

/**
 * @member {String} timestamp
 */
Block.prototype.timestamp = undefined;

/**
 * @member {String} totalDifficulty
 */
Block.prototype.totalDifficulty = undefined;

/**
 * @member {Number} txCount
 */
Block.prototype.txCount = undefined;

/**
 * @member {String} txFees
 */
Block.prototype.txFees = undefined;

/**
 * @member {String} type
 */
Block.prototype.type = undefined;

/**
 * @member {Array.<String>} unclesHashes
 */
Block.prototype.unclesHashes = undefined;

/**
 * @member {Number} withdrawalsCount
 */
Block.prototype.withdrawalsCount = undefined;

