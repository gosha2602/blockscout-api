/*
 * BlockScout API
 * API for BlockScout web app
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {MarketChartItem} from './MarketChartItem';

/**
 * The InlineResponse2004 model module.
 * @module model/InlineResponse2004
 * @version 1.0.0
 */
export class InlineResponse2004 {
  /**
   * Constructs a new <code>InlineResponse2004</code>.
   * @alias module:model/InlineResponse2004
   * @class
   * @param availableSupply {String} 
   * @param chartData {Array.<module:model/MarketChartItem>} 
   */
  constructor(availableSupply, chartData) {
    this.availableSupply = availableSupply;
    this.chartData = chartData;
  }

  /**
   * Constructs a <code>InlineResponse2004</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2004} obj Optional instance to populate.
   * @return {module:model/InlineResponse2004} The populated <code>InlineResponse2004</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse2004();
      if (data.hasOwnProperty('available_supply'))
        obj.availableSupply = ApiClient.convertToType(data['available_supply'], 'String');
      if (data.hasOwnProperty('chart_data'))
        obj.chartData = ApiClient.convertToType(data['chart_data'], [MarketChartItem]);
    }
    return obj;
  }
}

/**
 * @member {String} availableSupply
 */
InlineResponse2004.prototype.availableSupply = undefined;

/**
 * @member {Array.<module:model/MarketChartItem>} chartData
 */
InlineResponse2004.prototype.chartData = undefined;

