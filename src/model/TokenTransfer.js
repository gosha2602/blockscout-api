/*
 * BlockScout API
 * API for BlockScout web app
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {AddressParam} from './AddressParam';
import {TokenInfo} from './TokenInfo';

/**
 * The TokenTransfer model module.
 * @module model/TokenTransfer
 * @version 1.0.0
 */
export class TokenTransfer {
  /**
   * Constructs a new <code>TokenTransfer</code>.
   * @alias module:model/TokenTransfer
   * @class
   * @param blockHash {String} 
   * @param from {module:model/AddressParam} 
   * @param logIndex {String} 
   * @param method {String} 
   * @param timestamp {String} 
   * @param to {module:model/AddressParam} 
   * @param token {module:model/TokenInfo} 
   * @param total {Object} 
   * @param txHash {String} 
   * @param type {String} 
   */
  constructor(blockHash, from, logIndex, method, timestamp, to, token, total, txHash, type) {
    this.blockHash = blockHash;
    this.from = from;
    this.logIndex = logIndex;
    this.method = method;
    this.timestamp = timestamp;
    this.to = to;
    this.token = token;
    this.total = total;
    this.txHash = txHash;
    this.type = type;
  }

  /**
   * Constructs a <code>TokenTransfer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TokenTransfer} obj Optional instance to populate.
   * @return {module:model/TokenTransfer} The populated <code>TokenTransfer</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TokenTransfer();
      if (data.hasOwnProperty('block_hash'))
        obj.blockHash = ApiClient.convertToType(data['block_hash'], 'String');
      if (data.hasOwnProperty('from'))
        obj.from = AddressParam.constructFromObject(data['from']);
      if (data.hasOwnProperty('log_index'))
        obj.logIndex = ApiClient.convertToType(data['log_index'], 'String');
      if (data.hasOwnProperty('method'))
        obj.method = ApiClient.convertToType(data['method'], 'String');
      if (data.hasOwnProperty('timestamp'))
        obj.timestamp = ApiClient.convertToType(data['timestamp'], 'String');
      if (data.hasOwnProperty('to'))
        obj.to = AddressParam.constructFromObject(data['to']);
      if (data.hasOwnProperty('token'))
        obj.token = TokenInfo.constructFromObject(data['token']);
      if (data.hasOwnProperty('total'))
        obj.total = ApiClient.convertToType(data['total'], Object);
      if (data.hasOwnProperty('tx_hash'))
        obj.txHash = ApiClient.convertToType(data['tx_hash'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} blockHash
 */
TokenTransfer.prototype.blockHash = undefined;

/**
 * @member {module:model/AddressParam} from
 */
TokenTransfer.prototype.from = undefined;

/**
 * @member {String} logIndex
 */
TokenTransfer.prototype.logIndex = undefined;

/**
 * @member {String} method
 */
TokenTransfer.prototype.method = undefined;

/**
 * @member {String} timestamp
 */
TokenTransfer.prototype.timestamp = undefined;

/**
 * @member {module:model/AddressParam} to
 */
TokenTransfer.prototype.to = undefined;

/**
 * @member {module:model/TokenInfo} token
 */
TokenTransfer.prototype.token = undefined;

/**
 * @member {Object} total
 */
TokenTransfer.prototype.total = undefined;

/**
 * @member {String} txHash
 */
TokenTransfer.prototype.txHash = undefined;

/**
 * @member {String} type
 */
TokenTransfer.prototype.type = undefined;

