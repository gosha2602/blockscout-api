/*
 * BlockScout API
 * API for BlockScout web app
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {AddressParam} from './AddressParam';
import {DecodedInputLog} from './DecodedInputLog';

/**
 * The Log model module.
 * @module model/Log
 * @version 1.0.0
 */
export class Log {
  /**
   * Constructs a new <code>Log</code>.
   * @alias module:model/Log
   * @class
   * @param address {module:model/AddressParam} 
   * @param data {String} 
   * @param decoded {module:model/DecodedInputLog} 
   * @param index {Number} 
   * @param smartContract {module:model/AddressParam} 
   * @param topics {Array.<String>} 
   * @param txHash {String} 
   */
  constructor(address, data, decoded, index, smartContract, topics, txHash) {
    this.address = address;
    this.data = data;
    this.decoded = decoded;
    this.index = index;
    this.smartContract = smartContract;
    this.topics = topics;
    this.txHash = txHash;
  }

  /**
   * Constructs a <code>Log</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Log} obj Optional instance to populate.
   * @return {module:model/Log} The populated <code>Log</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Log();
      if (data.hasOwnProperty('address'))
        obj.address = AddressParam.constructFromObject(data['address']);
      if (data.hasOwnProperty('block_hash'))
        obj.blockHash = ApiClient.convertToType(data['block_hash'], 'String');
      if (data.hasOwnProperty('block_number'))
        obj.blockNumber = ApiClient.convertToType(data['block_number'], 'Number');
      if (data.hasOwnProperty('data'))
        obj.data = ApiClient.convertToType(data['data'], 'String');
      if (data.hasOwnProperty('decoded'))
        obj.decoded = DecodedInputLog.constructFromObject(data['decoded']);
      if (data.hasOwnProperty('index'))
        obj.index = ApiClient.convertToType(data['index'], 'Number');
      if (data.hasOwnProperty('smart_contract'))
        obj.smartContract = AddressParam.constructFromObject(data['smart_contract']);
      if (data.hasOwnProperty('topics'))
        obj.topics = ApiClient.convertToType(data['topics'], ['String']);
      if (data.hasOwnProperty('tx_hash'))
        obj.txHash = ApiClient.convertToType(data['tx_hash'], 'String');
    }
    return obj;
  }
}

/**
 * @member {module:model/AddressParam} address
 */
Log.prototype.address = undefined;

/**
 * @member {String} blockHash
 */
Log.prototype.blockHash = undefined;

/**
 * @member {Number} blockNumber
 */
Log.prototype.blockNumber = undefined;

/**
 * @member {String} data
 */
Log.prototype.data = undefined;

/**
 * @member {module:model/DecodedInputLog} decoded
 */
Log.prototype.decoded = undefined;

/**
 * @member {Number} index
 */
Log.prototype.index = undefined;

/**
 * @member {module:model/AddressParam} smartContract
 */
Log.prototype.smartContract = undefined;

/**
 * @member {Array.<String>} topics
 */
Log.prototype.topics = undefined;

/**
 * @member {String} txHash
 */
Log.prototype.txHash = undefined;

