/*
 * BlockScout API
 * API for BlockScout web app
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BlockScoutApi);
  }
}(this, function(expect, BlockScoutApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('StatsResponse', function() {
      beforeEach(function() {
        instance = new BlockScoutApi.StatsResponse();
      });

      it('should create an instance of StatsResponse', function() {
        // TODO: update the code to test StatsResponse
        expect(instance).to.be.a(BlockScoutApi.StatsResponse);
      });

      it('should have the property totalBlocks (base name: "total_blocks")', function() {
        // TODO: update the code to test the property totalBlocks
        expect(instance).to.have.property('totalBlocks');
        // expect(instance.totalBlocks).to.be(expectedValueLiteral);
      });

      it('should have the property totalAddresses (base name: "total_addresses")', function() {
        // TODO: update the code to test the property totalAddresses
        expect(instance).to.have.property('totalAddresses');
        // expect(instance.totalAddresses).to.be(expectedValueLiteral);
      });

      it('should have the property totalTransactions (base name: "total_transactions")', function() {
        // TODO: update the code to test the property totalTransactions
        expect(instance).to.have.property('totalTransactions');
        // expect(instance.totalTransactions).to.be(expectedValueLiteral);
      });

      it('should have the property averageBlockTime (base name: "average_block_time")', function() {
        // TODO: update the code to test the property averageBlockTime
        expect(instance).to.have.property('averageBlockTime');
        // expect(instance.averageBlockTime).to.be(expectedValueLiteral);
      });

      it('should have the property coinPrice (base name: "coin_price")', function() {
        // TODO: update the code to test the property coinPrice
        expect(instance).to.have.property('coinPrice');
        // expect(instance.coinPrice).to.be(expectedValueLiteral);
      });

      it('should have the property totalGasUsed (base name: "total_gas_used")', function() {
        // TODO: update the code to test the property totalGasUsed
        expect(instance).to.have.property('totalGasUsed');
        // expect(instance.totalGasUsed).to.be(expectedValueLiteral);
      });

      it('should have the property transactionsToday (base name: "transactions_today")', function() {
        // TODO: update the code to test the property transactionsToday
        expect(instance).to.have.property('transactionsToday');
        // expect(instance.transactionsToday).to.be(expectedValueLiteral);
      });

      it('should have the property gasUsedToday (base name: "gas_used_today")', function() {
        // TODO: update the code to test the property gasUsedToday
        expect(instance).to.have.property('gasUsedToday');
        // expect(instance.gasUsedToday).to.be(expectedValueLiteral);
      });

      it('should have the property gasPrices (base name: "gas_prices")', function() {
        // TODO: update the code to test the property gasPrices
        expect(instance).to.have.property('gasPrices');
        // expect(instance.gasPrices).to.be(expectedValueLiteral);
      });

      it('should have the property staticGasPrice (base name: "static_gas_price")', function() {
        // TODO: update the code to test the property staticGasPrice
        expect(instance).to.have.property('staticGasPrice');
        // expect(instance.staticGasPrice).to.be(expectedValueLiteral);
      });

      it('should have the property marketCap (base name: "market_cap")', function() {
        // TODO: update the code to test the property marketCap
        expect(instance).to.have.property('marketCap');
        // expect(instance.marketCap).to.be(expectedValueLiteral);
      });

      it('should have the property networkUtilizationPercentage (base name: "network_utilization_percentage")', function() {
        // TODO: update the code to test the property networkUtilizationPercentage
        expect(instance).to.have.property('networkUtilizationPercentage');
        // expect(instance.networkUtilizationPercentage).to.be(expectedValueLiteral);
      });

    });
  });

}));
